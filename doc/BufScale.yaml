# Part of the Fluid Corpus Manipulation Project (http://www.flucoma.org/)
# Copyright 2017-2019 University of Huddersfield.
# Licensed under the BSD-3 License.
# See license.md file in the project root for full license information.
# This project has received funding from the European Research Council (ERC)
# under the European Unionâ€™s Horizon 2020 research and innovation programme
# (grant agreement No 725899).
---
digest: A Scaling Processor for Buffers
species: buffer-proc
sc-categories: Libraries>FluidDecomposition
sc-related: Guides/FluCoMa, Guides/FluidDecomposition, Guides/FluidBufMultiThreading
see-also:
description: |
  This class implements a simple Buffer preprocessor, by scaling its values. It draws a simple translation from inputLow to outputLow, and from inputHigh to outputHigh. It is part of the :fluid-topic:`FluidDecomposition` of `Guides/FluCoMa`. For more explanations, learning material, and discussions on its musicianly uses, visit http://www.flucoma.org/

  The process will return a buffer with the same size and shape than the requested range.

parameters:
  source:
    description: |
      This is the method that calls for the scaling to be calculated on a given source buffer.
  startFrame:
    description: |
       The starting point (in samples) from which to copy in the source buffer.
  numFrames:
    description: |
       The duration (in samples) to copy from the source buffer. The default (-1) copies the full lenght of the buffer.
  startChan:
    description: |
       The first channel from which to copy in the source buffer.
  numChans:
    description: |
       The number of channels from which to copy in the source buffer. This parameter will wrap around the number of channels in the source buffer. The default (-1) copies all of the buffer's channel.
  destination:
    description: |
      The index of the buffer to use as the destination for the processed material.
  inputLow:
    description: |
      The low reference point of the input. it will be scaled to yield outputLow at the output
  inputHigh:
    description: |
      The high reference point of the input. it will be scaled to yield outputHigh at the output
  outputLow:
    description: |
      The output value when the input is inputLow
  outputHigh:
    description: |
      The output value when the input is inputHigh
  clipping:
    description: |
      Optional clipping of the input (and therefore of the output). 0 is none. 1 caps the lowest input at inputLow. 2 caps the highest input at inputHigh, 3 caps both input low and high value within the described range.
