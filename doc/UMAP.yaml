# Part of the Fluid Corpus Manipulation Project (http://www.flucoma.org/)
# Copyright 2017-2019 University of Huddersfield.
# Licensed under the BSD-3 License.
# See license.md file in the project root for full license information.
# This project has received funding from the European Research Council (ERC)
# under the European Unionâ€™s Horizon 2020 research and innovation programme
# (grant agreement No 725899).
---
digest: Dimensionality Reduction with Uniform Manifold Approximation and Projection
species: data
sc-categories: Dimensionality Reduction, Data Processing
sc-related: Classes/FluidMDS, Classes/FluidDataSet
see-also:
description: |
  Multidimensional scaling of a :fluid-obj:`DataSet` using Uniform Manifold Approximation and Projection (UMAP)

  Please refer to https://umap-learn.readthedocs.io/ for more information on the algorithm.

parameters:
    numDimensions:
      description: |
        The number of dimensions to reduce to
    distanceMetric:
      description: |
        The distance metric to use (integer, 0-6, see flags above)
    numNeighbours:
      description: |
        The number of neighbours considered by the algorithm to balance local vs global structures to conserve. Low values will prioritise preserving local structure, high values will help preserving the global structure.
    minDist:
      description: |
        The minimum distance each point is allowed to be from the others in the low dimension space. Low values will make tighter clumps, and higher will spread the points more.
    iterations:
      description: |
        The number of iterations that the algorithm will go through to optimise the new representation
    learnRate:
      description: |
        The learning rate of the algorithm, aka how much of the error it uses to estimate the next iteration.

messages:
  fit:
   description: |
      Train this model on a :fluid-obj:`DataSet` but don't transform the data
   args:
    - name: dataSet
      description: |
        A :fluid-obj:`DataSet` to analyse
    - name: action
      description: |
        Run when done
  transform:
   description: |
      Given a trained model, apply the reduction to a source :fluid-obj:`DataSet` and write to a destination. Can be the same for both input and output (in-place).
   args:
    - name: sourceDataSet
      description: |
        Source data, or the DataSet name
    - name: destDataSet
      description: |
        Destination data, or the DataSet name
    - name: action
      description: |
        Run when done
  fitTransform:
   description: |
      Fit the model to a :fluid-obj:`DataSet` and write the new projected data to a destination FluidDataSet.
   args:
    - name: sourceDataSet
      description: |
        Source data, or the DataSet name
    - name: destDataSet
      description: |
        Destination data, or the DataSet name
    - name: action
      description: |
        Run when done
